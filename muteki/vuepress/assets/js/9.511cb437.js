(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{355:function(e,s,a){"use strict";a.r(s);var t=a(43),n=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("ul",[a("li",[a("em",[e._v("generator")]),e._v(" 自动生成的实体类\n"),a("ul",[a("li",[e._v("新增单表一条数据 : "),a("code",[e._v("baseInsert(Object object, boolean getAutoIncrementPrimaryKey)")]),e._v(" "),a("ul",[a("li",[e._v("object : 为实体类对象，只会保存有值的字段")]),e._v(" "),a("li",[e._v("getAutoIncrementPrimaryKey : 如果需要获取自增id，需指定该参数为 "),a("code",[e._v("true")])])])]),e._v(" "),a("li",[e._v("新增单表多条数据 : "),a("code",[e._v("baseInsertList(List<T> list)")]),e._v(" "),a("ul",[a("li",[e._v("该方法会将该表的所有字段进行遍历，并保存到数据库")])])]),e._v(" "),a("li",[e._v("根据id单表删除 : "),a("code",[e._v("baseDeleteByClassAndId(Class nowClass, Long/Integer/String id)")]),e._v(" "),a("ul",[a("li",[e._v("根据 "),a("code",[e._v("id")]),e._v(" 字段进行删除")])])]),e._v(" "),a("li",[e._v("根据ids数组单表删除 : "),a("code",[e._v("baseDeleteByClassAndIds(Class nowClass, T[] ids)")]),e._v(" "),a("ul",[a("li",[e._v("根据 "),a("code",[e._v("id")]),e._v(" 字段进行删除,删除 "),a("code",[e._v("ids")]),e._v(" 数组的数据 ("),a("code",[e._v("IN")]),e._v(")")])])]),e._v(" "),a("li",[e._v("单表更新 : "),a("code",[e._v("baseUpdate(Object object)")]),e._v(" "),a("ul",[a("li",[e._v("根据表的 "),a("em",[e._v("主键")]),e._v(" 进行更新操作，只更新有值的字段部分")])])]),e._v(" "),a("li",[e._v("单表查询一条数据 : "),a("code",[e._v("baseFindByClassAndId(Class<T> clazz, Long/Integer/String id)")]),e._v(" "),a("ul",[a("li",[e._v("根据 "),a("code",[e._v("id")]),e._v(" 字段查询一条数据")])])]),e._v(" "),a("li",[e._v("单表查询多条数据 : "),a("code",[e._v("baseFindByClassAndIds(Class<T> clazz, Long/Integer/String[] ids)")]),e._v(" "),a("ul",[a("li",[e._v("根据 "),a("code",[e._v("id")]),e._v(" 字段进行查询，查询 "),a("code",[e._v("ids")]),e._v(" 数组的数据 ("),a("code",[e._v("IN")]),e._v(")")])])]),e._v(" "),a("li",[e._v("单表根据字段查询一条数据 : "),a("code",[e._v("baseFindOneDataByClassAndColumnAndValue(Class<T> clazz, String column, Object object)")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("clazz")]),e._v(" 实体类  如 : "),a("code",[e._v("User.class")])]),e._v(" "),a("li",[a("code",[e._v("column")]),e._v(" 自动生成的实体类静态常量 如 : "),a("code",[e._v("User.COLUMN_USERNAME")])]),e._v(" "),a("li",[a("code",[e._v("object")]),e._v(" 查询的值"),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[e._v("    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("User")]),e._v(" user "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("baseFindOneDataByClassAndColumnAndValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("User")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("User")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("COLUMN_USERNAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"weiziplus"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])])])])]),e._v(" "),a("li",[a("code",[e._v("BaseWhere")]),e._v(" "),a("ul",[a("li",[e._v("创建"),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[e._v("       "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("BaseWhere")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("User")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),e._v(" baseWhere "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("BaseWhere")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("User")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])])]),e._v(" "),a("li",[e._v("添加查询条件 "),a("code",[e._v("where()")]),e._v(" "),a("ul",[a("li",[e._v("参数为"),a("code",[e._v("BaseWhereModel")]),e._v("或"),a("code",[e._v("List<BaseWhereModel> baseWhereModelList")])]),e._v(" "),a("li",[a("code",[e._v("BaseWhereModel")])]),e._v(" "),a("li",[e._v("实例化 "),a("code",[e._v("BaseWhereModel(String column, BaseWhereEnum where, Object value)")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("column")]),e._v(" 对应的实体类字段")]),e._v(" "),a("li",[a("code",[e._v("where")]),e._v(" 条件")]),e._v(" "),a("li",[a("code",[e._v("value")]),e._v(" 值    (条件为"),a("code",[e._v("IN")]),e._v("或"),a("code",[e._v("NOT IN")]),e._v("时，值为数组类型)")])])]),e._v(" "),a("li",[e._v("实例化 "),a("code",[e._v("BaseWhereModel(String column, Object value)")]),e._v(" 不传条件默认为 "),a("code",[e._v("=")])])])]),e._v(" "),a("li",[e._v("排序 "),a("code",[e._v("descOrderBy")]),e._v("或"),a("code",[e._v("ascOrderBy")]),e._v("   多个排序条件按照赋值顺序进行排序")])])]),e._v(" "),a("li",[e._v("单表根据多个字段查询一条数据 : "),a("code",[e._v("baseFindOneData(BaseWhere<T> baseWhere)")])]),e._v(" "),a("li",[e._v("单表获取多条数据 : "),a("code",[e._v("baseFindListByClassAndColumnAndValue(Class<T> clazz, String column, Object object)")])]),e._v(" "),a("li",[e._v("单表根据多个字段查询多条数据 : "),a("code",[e._v("baseFindList(BaseWhere<T> baseWhere)")])]),e._v(" "),a("li",[e._v("单表获取所有数据 : "),a("code",[e._v("baseFindAllByClass(Class<T> clazz)")])])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);